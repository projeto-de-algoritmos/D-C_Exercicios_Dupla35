function multiply(num1, num2) {
    // Função auxiliar para adicionar dois números representados como strings
    function add(lhs, rhs) {
      // Função auxiliar para alinhar as strings, preenchendo com zeros à esquerda, se necessário
      function alignStr(left, right) {
        const maxLen = Math.max(left.length, right.length);
        return [
          '0'.repeat(maxLen - left.length) + left,
          '0'.repeat(maxLen - right.length) + right
        ];
      }
  
      const [lhsAligned, rhsAligned] = alignStr(lhs, rhs);
      const res = [];
      let carry = 0;
      // Percorre as strings da direita para a esquerda
      for (let i = lhsAligned.length - 1; i >= 0; i--) {
        const l = lhsAligned.charCodeAt(i) - 48; // Converte o caractere para o valor numérico
        const r = rhsAligned.charCodeAt(i) - 48; // Converte o caractere para o valor numérico
        const val = l + r + carry; // Soma os dígitos e o carry anterior
        if (val >= 10) {
          res.push(String.fromCharCode(val - 10 + 48)); // Adiciona o dígito resultante (valor - 10) como caractere
          carry = 1; // Define o carry para a próxima iteração
        } else {
          res.push(String.fromCharCode(val + 48)); // Adiciona o dígito resultante como caractere
          carry = 0; // Define o carry para zero
        }
      }
      if (carry === 1) {
        res.push('1'); // Se houver um carry final, adiciona-o como dígito adicional
      }
      res.reverse(); // Inverte o vetor resultante para obter a representação correta do número
      return res.join(''); // Converte o vetor de dígitos em uma string
    }
  
    return res; // Retorna o resultado
  }